<div class="banner" style="background-image: linear-gradient(-225deg, rgba(0,101,168,0.6) 0%, rgba(0,36,61,0.6) 50%), url('https://img.webmd.com/dtmcms/live/webmd/consumer_assets/site_images/articles/health_tools/12_powerhouse_vegetables_slideshow/intro_cream_of_crop.jpg');">
  <div class="banner-content">

  <h2>Vegetais frescos pertinho de você !!!</h2>

  </div>

</div>
<div id="map">
</div>

<div class="banner2" id="como-funciona">
  <h2 class="subtitle mb 80">Como funciona?</h2>
  <br><br>
  <div class="row section-content">

    <div class="col-md-3">
      <i class="fa fa-pencil fa-3x"></i>
      <p>Cadastre-se</p>
    </div>
    <div class="col-md-3">
      <i class="fa fa-check-square-o fa-3x"></i>
      <p>Selecione  o vendedor e o produto</p>
    </div>

    <div class="col-md-3">
      <i class="fa fa-file-text fa-3x"></i>
      <p>Faça sua lista</p>
    </div>

    <div class="col-md-3">
      <i class="fa fa-credit-card fa-3x"></i>
      <p>Escolha o método de pagamento</p>
    </div>
  </div>
</div>


<div class="input-group" id="search-map">
  <input id="pac-input" type="text" class="form-control" placeholder="Digite o local procurado." aria-describedby="basic-addon1">
</div>


<% content_for(:after_js) do %>
  <script>
    var handler = Gmaps.build('Google');
    handler.buildMap({ internal: { id: 'map' } }, function() {
      markers = handler.addMarkers(<%= raw @markers.to_json %>);
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
      if (markers.length == 0) {
        handler.getMap().setZoom(4);
      } else if (markers.length == 1) {
        handler.getMap().setZoom(18);
      }

      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          handler.getMap().setCenter({
            lat: position.coords.latitude,
            lng: position.coords.longitude
          });
        });
      }

      // Create the search box and link it to the UI element.
      var input = document.getElementById('pac-input');
      var map = handler.getMap();
      var searchBox = new google.maps.places.SearchBox(input);

      map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

      // Listen for the event fired when the user selects a prediction and retrieve
      // more details for that place.
      searchBox.addListener('places_changed', function() {
        var places = searchBox.getPlaces();

        // For each place, get the icon, name and location.
        var bounds = new google.maps.LatLngBounds();
        places.forEach(function(place) {
          if (!place.geometry) {
            console.log("Returned place contains no geometry");
            return;
          }

          if(place.geometry.viewport) {
            // Only geocodes have viewport.
            bounds.union(place.geometry.viewport);
          } else {
            bounds.extend(place.geometry.location);
          }
        });
        map.fitBounds(bounds);
      });
    });
  </script>
<% end %>


  </div>
</div>

